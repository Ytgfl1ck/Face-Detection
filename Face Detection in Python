import cv2


face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')

def detect_faces(image):
    gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)  
    faces = face_cascade.detectMultiScale(gray_image, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))  # Detect faces
    return faces


def draw_faces(image, faces):
    for (x, y, w, h) in faces:
        cv2.rectangle(image, (x, y), (x + w, y + h), (255, 0, 0), 2)  # Draw rectangle around each face
    return image


cap = cv2.VideoCapture(0)

while True:
    ret, frame = cap.read()  
    if not ret:
        break

    faces = detect_faces(frame)  
    frame_with_faces = draw_faces(frame, faces) 

    cv2.imshow('Face Detection', frame_with_faces)  

   
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
